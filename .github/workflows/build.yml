name: Upload Python Package

on:
  push:
    branches: [ main, feature/cicd ]

permissions:
  contents: read

jobs:
  ruff-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.6.3 # keep in sync with pyproject.toml
      # Update output format to enable automatic inline annotations.
      - name: Run Ruff
        run: ruff format --diff .
  
  unit-tests:
    name: "Unit tests"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install coveralls
          pip install ".[dev]"
          

      - name: "Run unit tests"
        run: |
          coverage erase
          coverage run -m unittest discover --failfast
          coverage report --include="mjinx/*"

      - name: "Coveralls"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coveralls --service=github
     
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ".[dev]"

    - name: Run tests
      run: |
        pytest tests/example_tests

  mypy:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install mypy

    - name: Run mypy
      continue-on-error: true
      run: |
        mypy . 

  deploy:
    runs-on: ubuntu-latest
    needs: ruff-check
    # run on tag only
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build --wheel

      - name: Publish package to the test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
